{"version":3,"sources":["components/images/reactMovie_logo.png","components/images/tmdb_logo.svg","components/images/no_image.jpg","components/styles/StyledHeader.js","components/elements/Header.js","config.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBtn.js","components/styles/StyledSpinner.js","components/elements/Spinner.js","components/Home.js","components/hooks/useHomeFetch.js","components/styles/GlobalStyle.js","components/App.js","index.js"],"names":["module","exports","StyledHeader","styled","div","StyledRMDBLogo","img","StyledTMDBLogo","Header","className","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","StyledHeroImage","props","image","HeroImage","title","text","StyledGrid","StyledGridContent","Grid","header","children","StyledMovieThumb","MovieThumb","clickable","movieId","StyledLoadMoreBtn","button","LoadMoreBtn","callback","type","onClick","StyledSpinner","Spinner","Home","useState","movies","state","setState","loading","setLoading","error","setError","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","result","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","log","useEffect","useHomeFetch","searchTerm","backdrop_path","original_title","overview","map","movie","key","id","poster_path","NoImage","movieName","searchEndpoint","popularEndpoint","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90daccbb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactMovie_logo.08494abf.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n  background: #1c1c1c;\n  padding: 0 20px;\n  box-sizing: border-box;\n\n  .header-content {\n    max-width: 1280px;\n    min-height: 120px;\n    padding: 20px 0px;\n    margin: 0 auto;\n    box-sizing: border-box;\n\n    @media screen and (max-width: 500px) {\n      max-width: 1280px;\n      min-height: 0px;\n    }\n  }\n`;\n\nexport const StyledRMDBLogo = styled.img`\n  width: 250px;\n  margin-top: 20px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n    margin-top: 5px;\n  }\n`;\n\nexport const StyledTMDBLogo = styled.img`\n  width: 122px;\n  margin-top: 25px;\n  float: right;\n\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`;\n","import React from 'react';\n\nimport RMDBLogo from '../images/reactMovie_logo.png';\nimport TMDBLogo from '../images/tmdb_logo.svg';\n\nimport { \n    StyledHeader, \n    StyledRMDBLogo, \n    StyledTMDBLogo\n} from '../styles/StyledHeader';\n\n// 1. Learn how to create a styled basic styled component\n// 2. Learn how to handle props in styled component\n// 3. Create a global style with styled components\n\nconst Header = () => (\n<StyledHeader>\n  <div className=\"header-content\">\n    <StyledRMDBLogo src={RMDBLogo} alt=\"rmdb-logo\" />\n    <StyledTMDBLogo src={TMDBLogo} alt=\"tmdb-logo\" />\n  </div>\n</StyledHeader>\n)\n\nexport default Header;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE };\n","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\n\nimport { StyledHeroImage } from '../styles/StyledHeroImage';\n\nconst HeroImage = ({ image, title, text }) => (\n  <StyledHeroImage image={image}>\n    <div className=\"heroimage-content\">\n      <div className=\"heroimage-text\">\n        <h1>{title}</h1>\n        <p>{text}</p>\n      </div>\n    </div>\n  </StyledHeroImage>\n)\n\nexport default HeroImage;","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import React from 'react';\n\nimport { StyledGrid, StyledGridContent } from '../styles/StyledGrid';\n\nconst Grid = ({ header, children }) => (\n  <StyledGrid>\n    <h1>{header}</h1>\n    <StyledGridContent>{children}</StyledGridContent>\n  </StyledGrid>\n  \n)\n\nexport default Grid;","import styled from 'styled-components';\n\nexport const StyledMovieThumb = styled.div`\n  img {\n    width: 100%;\n    /* min-height: 340px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n    animation: animateMovieThumb 0.5s;\n\n    :hover {\n      opacity: 0.8;\n    }\n\n    .clickable {\n      cursor: pointer;\n    }\n\n    @keyframes animateMovieThumb {\n      from {\n        opacity: 0;\n      }\n      to {\n        opacity: 1;\n      }\n    }\n  }\n`;\n","import React from 'react';\n\nimport { StyledMovieThumb } from '../styles/StyledMovieThumb';\n\nconst MovieThumb = ({ image, movieId, clickable }) => (\n  <StyledMovieThumb>\n    {clickable ? (\n      <img className=\"clickable\" src={image} alt=\"moviethumb\" />\n    ) : (\n      <img src={image} alt=\"moviethumb\" />\n    )}\n  </StyledMovieThumb>\n)\n\nexport default MovieThumb;\n\n","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\n\nimport { StyledLoadMoreBtn } from '../styles/StyledLoadMoreBtn';\n\nconst LoadMoreBtn = ({ text, callback }) => (\n  <StyledLoadMoreBtn type=\"button\" onClick={callback}>\n    {text}\n  </StyledLoadMoreBtn>\n)\n\nexport default LoadMoreBtn;","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #16d47b; /* Blue */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\n\nimport { StyledSpinner } from '../styles/StyledSpinner';\n\nconst Spinner = () =><StyledSpinner />\n\nexport default Spinner;","import React, { useState } from 'react';\nimport {\n  API_URL,\n  API_KEY,\n  POSTER_SIZE,\n  BACKDROP_SIZE,\n  IMAGE_BASE_URL,\n} from '../config';\n\n// import Components\nimport HeroImage from './elements/HeroImage';\nimport SearchBar from './elements/SearchBar';\nimport Grid from './elements/Grid';\nimport MovieThumb from './elements/MovieThumb';\nimport LoadMoreBtn from './elements/LoadMoreBtn';\nimport Spinner from './elements/Spinner';\n\n// Custom Hook\nimport { useHomeFetch } from './hooks/useHomeFetch';\n\nimport NoImage from './images/no_image.jpg';\n\nconst Home = () => {\n  const [\n    {\n      state: { movies, currentPage, totalPages, heroImage },\n      loading,\n      error,\n    },\n    fetchMovies,\n  ] = useHomeFetch();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const loadMoreMovies = () => {\n    const searchEndpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${searchTerm}&page=${currentPage + 1}`;\n    const popularEndpoint = `${API_URL}movie/popular?api_key=${API_KEY}&page=${currentPage + 1}`;\n\n    const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\n\n    fetchMovies(endpoint);\n\n  }\n\n  if (error) return <div>Something went wrong ...</div>;\n  if (!movies[0]) return <Spinner />;\n\n  return (\n    <>\n      <HeroImage\n        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n        title={heroImage.original_title}\n        text={heroImage.overview}\n      />\n      <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\n        {movies.map(movie => (\n          <MovieThumb\n            key={movie.id}\n            clickable\n            image={\n              movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                : NoImage\n            }\n            movieId={movie.id}\n            movieName={movie.original_title}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      <LoadMoreBtn text=\"Load More\" callback={loadMoreMovies} />\n    </>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from 'react';\nimport { API_URL, API_KEY} from '../../config';\n\nexport const useHomeFetch = () => {\n  const [state, setState] = useState({ movies: [] });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchMovies = async endpoint => {\n    setError(false);\n    setLoading(true);\n\n    const isLoadMore = endpoint.search('page');\n\n    try {\n      const result = await (await fetch(endpoint)).json();\n      setState(prev => ({\n        ...prev,\n        movies:\n          isLoadMore !== -1\n        ? [...prev.movies, ...result.results]\n        : [...result.results],\n        heroImage: prev.heroImage || result.results[0],\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }))\n\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n    setLoading(false);\n  }\n\n  // Fetch popular movies initially on mount\n  useEffect(() => {\n    fetchMovies(`${API_URL}movie/popular?api_key=${API_KEY}`);\n  }, [])\n\n  return [{ state, loading, error}, fetchMovies];\n}","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n","import React from 'react';\n\nimport Header from './elements/Header';\nimport Home from './Home';\n\nimport { GlobalStyle } from './styles/GlobalStyle';\n\nconst App = () => (\n  <>\n    <Header />\n    <Home />\n    <GlobalStyle />\n  </>\n)\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}